body {
    padding: 20px;
}
/** 
 * Overriding bootstrap with a 2 layer approach
 * - layer 1: override at build time (i.e. pre-procssing)
 * - layer 2: override at runtime
 */

//////////////////////////////////////////////////////////////////
// 1: override at build time
//////////////////////////////////////////////////////////////////

// (override) standard variables (in this case a standard bootstrap variable)
$primary: #ff0099;
$secondary: #9d8792;

// import boostrap so that the pre-process will build bootstrap with our customer variables
@import 'node_modules/bootstrap/scss/bootstrap';

//////////////////////////////////////////////////////////////////
// 2: override at runtime
//////////////////////////////////////////////////////////////////

// we use a mixin to access set the css vars
// based on a sass var
:root {
    --primary: var(--primary-color, #{$primary});
    --primary-darken: var(--primary-darken-color, #{darken($primary, 7.5%)});
    --secondary: var(--secondary-color, #{$secondary});
    --secondary-darken: var(--secondary-darken-color, #{darken($secondary, 7.5%)});
    --radius: var(--border-radius, #{$border-radius});
    --font: var(--font-family, 'Roboto');
}

body {
    font-family: var(--font);
}

// override bootstrap specific rules, using css vars
// buttons
.btn {
    border-radius: var(--radius);
    &-primary {
        background-color: var(--primary);
        border-color: var(--primary);
        &:hover,
        &:not(:disabled):not(.disabled):active {
            background-color: var(--primary-darken);
            border-color: var(--primary-darken);
        }
    }

    &-secondary {
        background-color: var(--secondary-color);
        border-color: var(--secondary-color);
        &:hover,
        &:not(:disabled):not(.disabled):active {
            background-color: var(--secondary-darken);
            border-color: var(--secondary-darken);
        }
    }

    &-outline {
        &-primary {
            color: var(--primary);
            border-color: var(--primary);
            &:hover,
            &:not(:disabled):not(.disabled):active {
                background-color: var(--primary);
                border-color: var(--primary-darken);
            }
        }
        &-secondary {
            color: var(--secondary-color);
            border-color: var(--secondary-color);
            &:hover,
            &:not(:disabled):not(.disabled):active {
                background-color: var(--secondary-color);
                border-color: var(--secondary-darken);
            }
        }
    }
}

// text colors
.text {
    &-primary {
        color: var(--primary) !important;
    }
    &-secondary {
        color: var(--secondary-color) !important;
    }
}

// badge
.badge {
    border-radius: var(--radius);
    &-primary {
        background-color: var(--primary);
    }
    &-secondary {
        background-color: var(--secondary-color);
    }
}

// border
.border {
    &-primary {
        border-color: var(--primary) !important;
    }
    &-secondary {
        border-color: var(--secondary-color) !important;
    }
}

// fix bootstrap color input
// see https://github.com/twbs/bootstrap/issues/18786
input[type='color'].form-control {
    height: $input-height;
}
