body {
    padding: 20px;
}
/** 
 * Overriding bootstrap with a 2 layer approach
 * - layer 1: override at build time (i.e. pre-procssing)
 * - layer 2: override at runtime
 */

//////////////////////////////////////////////////////////////////
// 1: override at build time
//////////////////////////////////////////////////////////////////

// (override) standard variables (in this case a standard bootstrap variable)
$primary: #ff0099;
$secondary: #9d8792;

// import boostrap so that the pre-process will build bootstrap with our customer variables
@import 'node_modules/bootstrap/scss/bootstrap';

//////////////////////////////////////////////////////////////////
// 2: override at runtime
//////////////////////////////////////////////////////////////////

// we use a mixin to access set the css vars
// based on a sass var
@mixin css-vars($varMap: null) {
    @at-root :root {
        @each $varName, $varValue in $varMap {
            #{$varName}: #{$varValue};
        }
    }
}

// create css-vars
@include css-vars(
    (
        --primary-color: $primary,
        --primary-darken-color: darken($primary, 7.5%),
        --secondary-color: $secondary,
        --secondary-darken-color: darken($secondary, 7.5%),
        --border-radius: $border-radius,
        --border-radius-lg: $border-radius-lg,
        --border-radius-sm: $border-radius-lg
    )
);

// override bootstrap specific rules, using css vars
// buttons
.btn {
    border-radius: var(--border-radius, $border-radius);
    &-primary {
        background-color: var(--primary-color, $primary);
        border-color: var(--primary-color, $primary);
        &:hover,
        &:not(:disabled):not(.disabled):active {
            background-color: var(--primary-darken-color, darken($primary, 7.5%));
            border-color: var(--primary-darken-color, darken($primary, 7.5%));
        }
    }

    &-secondary {
        background-color: var(--secondary-color, $secondary);
        border-color: var(--secondary-color, $secondary);
        &:hover,
        &:not(:disabled):not(.disabled):active {
            background-color: var(--secondary-darken-color, darken($primary, 7.5%));
            border-color: var(--secondary-darken-color, darken($primary, 7.5%));
        }
    }

    &-outline {
        &-primary {
            color: var(--primary-color, $primary);
            border-color: var(--primary-color, $primary);
            &:hover,
            &:not(:disabled):not(.disabled):active {
                background-color: var(--primary-color, $primary);
                border-color: var(--primary-darken-color, darken($primary, 7.5%));
            }
        }
        &-secondary {
            color: var(--secondary-color, $secondary);
            border-color: var(--secondary-color, $secondary);
            &:hover,
            &:not(:disabled):not(.disabled):active {
                background-color: var(--secondary-color, $secondary);
                border-color: var(--secondary-darken-color, darken($primary, 7.5%));
            }
        }
    }
}

// text colors
.text {
    &-primary {
        color: var(--primary-color, $primary) !important;
    }
    &-secondary {
        color: var(--secondary-color, $secondary) !important;
    }
}

// badge
.badge {
    border-radius: var(--border-radius, $border-radius);
    &-primary {
        background-color: var(--primary-color, $primary);
    }
    &-secondary {
        background-color: var(--secondary-color, $secondary);
    }
}

// border
.border {
    &-primary {
        border-color: var(--primary-color, $primary) !important;
    }
    &-secondary {
        border-color: var(--secondary-color, $secondary) !important;
    }
}

// carousel
.carousel {
    &-caption {
        color: var(--primary-color, $primary);
    }
    &-indicators .active {
        background-color: var(--primary-color, $primary);
    }
    &-control-prev-icon,
    &-control-next-icon {
        border: solid 2px var(--primary-color, $primary);
        border-radius: 100px;
        background-origin: content-box;
        width: 30px;
        height: 30px;
        padding: 5px;
    }
}

// fix bootstrap color input
// see https://github.com/twbs/bootstrap/issues/18786
input[type='color'].form-control {
    height: $input-height;
}
